"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./components/common/Button.tsx":
/*!**************************************!*\
  !*** ./components/common/Button.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/../node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nconst Button = (param)=>{\n    let { buttonLabel, buttonSize, buttonBackgroundColor, action } = param;\n    const backgroundColorClass = buttonBackgroundColor ? ({\n        red: \"bg-red-500\",\n        blue: \"bg-blue-500\",\n        orange: \"bg-orange-500\",\n        green: \"bg-green-500\"\n    })[buttonBackgroundColor] : \"bg-slate-500\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        onClick: action,\n        className: \"\".concat(backgroundColorClass, \" \").concat(buttonSize, \" px-6 py-2 text-sm font-semibold rounded-lg hover:\").concat(backgroundColorClass, \"/50 transition duration-300 text-white\"),\n        children: buttonLabel\n    }, void 0, false, {\n        fileName: \"/home/caleb/Documents/Alx ProDev/alx-project-0x03-setup/alx-project-0x03/components/common/Button.tsx\",\n        lineNumber: 12,\n        columnNumber: 5\n    }, undefined);\n};\n_c = Button;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);\nvar _c;\n$RefreshReg$(_c, \"Button\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2NvbXBvbmVudHMvY29tbW9uL0J1dHRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLE1BQU1BLFNBQVM7UUFBQyxFQUFFQyxXQUFXLEVBQUVDLFVBQVUsRUFBRUMscUJBQXFCLEVBQUVDLE1BQU0sRUFBZTtJQUNyRixNQUFNQyx1QkFBdUJGLHdCQUN6QjtRQUNFRyxLQUFLO1FBQ0xDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxPQUFPO0lBQ1QsRUFBQyxDQUFDTixzQkFBc0IsR0FDeEI7SUFFSixxQkFDRSw4REFBQ087UUFDQ0MsU0FBU1A7UUFDVFEsV0FBVyxHQUEyQlYsT0FBeEJHLHNCQUFxQixLQUFrRUEsT0FBL0RILFlBQVcsc0RBQXlFLE9BQXJCRyxzQkFBcUI7a0JBRXpISjs7Ozs7O0FBR1A7S0FsQk1EO0FBb0JOLGlFQUFlQSxNQUFNQSxFQUFDIiwic291cmNlcyI6WyIvaG9tZS9jYWxlYi9Eb2N1bWVudHMvQWx4IFByb0Rldi9hbHgtcHJvamVjdC0weDAzLXNldHVwL2FseC1wcm9qZWN0LTB4MDMvY29tcG9uZW50cy9jb21tb24vQnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBCdXR0b24gPSAoeyBidXR0b25MYWJlbCwgYnV0dG9uU2l6ZSwgYnV0dG9uQmFja2dyb3VuZENvbG9yLCBhY3Rpb24gfTogQnV0dG9uUHJvcHMpID0+IHtcbiAgY29uc3QgYmFja2dyb3VuZENvbG9yQ2xhc3MgPSBidXR0b25CYWNrZ3JvdW5kQ29sb3JcbiAgICA/IHtcbiAgICAgICAgcmVkOiBcImJnLXJlZC01MDBcIixcbiAgICAgICAgYmx1ZTogXCJiZy1ibHVlLTUwMFwiLFxuICAgICAgICBvcmFuZ2U6IFwiYmctb3JhbmdlLTUwMFwiLFxuICAgICAgICBncmVlbjogXCJiZy1ncmVlbi01MDBcIixcbiAgICAgIH1bYnV0dG9uQmFja2dyb3VuZENvbG9yXVxuICAgIDogXCJiZy1zbGF0ZS01MDBcIjtcblxuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIG9uQ2xpY2s9e2FjdGlvbn1cbiAgICAgIGNsYXNzTmFtZT17YCR7YmFja2dyb3VuZENvbG9yQ2xhc3N9ICR7YnV0dG9uU2l6ZX0gcHgtNiBweS0yIHRleHQtc20gZm9udC1zZW1pYm9sZCByb3VuZGVkLWxnIGhvdmVyOiR7YmFja2dyb3VuZENvbG9yQ2xhc3N9LzUwIHRyYW5zaXRpb24gZHVyYXRpb24tMzAwIHRleHQtd2hpdGVgfVxuICAgID5cbiAgICAgIHtidXR0b25MYWJlbH1cbiAgICA8L2J1dHRvbj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjtcbiJdLCJuYW1lcyI6WyJCdXR0b24iLCJidXR0b25MYWJlbCIsImJ1dHRvblNpemUiLCJidXR0b25CYWNrZ3JvdW5kQ29sb3IiLCJhY3Rpb24iLCJiYWNrZ3JvdW5kQ29sb3JDbGFzcyIsInJlZCIsImJsdWUiLCJvcmFuZ2UiLCJncmVlbiIsImJ1dHRvbiIsIm9uQ2xpY2siLCJjbGFzc05hbWUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/common/Button.tsx\n"));

/***/ })

});